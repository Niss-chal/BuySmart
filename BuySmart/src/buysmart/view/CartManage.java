/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package buysmart.view;

import buysmart.dao.ProductDAO;
import buysmart.model.ProductModel;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author fahmi
 */
public class CartManage extends javax.swing.JFrame {

    
    /**
     * Creates new form CartManage
     */
    public CartManage() {
        deleteButton = new JButton("Delete Selected");
        add(deleteButton); // Add to layout appropriately
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cartLogoutPanel = new javax.swing.JPanel();
        cartBackButton = new javax.swing.JButton();
        cartLogoutButton = new javax.swing.JButton();
        cartLogo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        DecreaseQuantityButton = new javax.swing.JButton();
        IncreaseQuantityButton = new javax.swing.JButton();
        cartcheckoutCalculate = new javax.swing.JPanel();
        userLocationGet = new javax.swing.JTextField();
        paymentOptionDrop = new javax.swing.JComboBox<>();
        userLocationIndicator = new javax.swing.JLabel();
        paymentIndicator = new javax.swing.JLabel();
        moneyWalletIndicator = new javax.swing.JLabel();
        moneyYouHave = new javax.swing.JLabel();
        totalMoneyCart = new javax.swing.JLabel();
        placeOrderButton = new javax.swing.JButton();
        totalMoneyCount = new javax.swing.JLabel();
        cartcheckoutSign = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cartLogoutPanel.setBackground(new java.awt.Color(204, 204, 204));

        cartBackButton.setBackground(new java.awt.Color(153, 204, 255));
        cartBackButton.setText("Back");
        cartBackButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        cartBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cartBackButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cartBackButtonMouseExited(evt);
            }
        });
        cartBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartBackButtonActionPerformed(evt);
            }
        });

        cartLogoutButton.setBackground(new java.awt.Color(153, 204, 255));
        cartLogoutButton.setText("Logout");
        cartLogoutButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        cartLogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cartLogoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cartLogoutButtonMouseExited(evt);
            }
        });
        cartLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartLogoutButtonActionPerformed(evt);
            }
        });

        cartLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imag/logo2 (1).png"))); // NOI18N

        javax.swing.GroupLayout cartLogoutPanelLayout = new javax.swing.GroupLayout(cartLogoutPanel);
        cartLogoutPanel.setLayout(cartLogoutPanelLayout);
        cartLogoutPanelLayout.setHorizontalGroup(
            cartLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartLogoutPanelLayout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(cartBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                .addComponent(cartLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                .addComponent(cartLogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );
        cartLogoutPanelLayout.setVerticalGroup(
            cartLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartLogoutPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(cartLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cartBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cartLogo)
                    .addComponent(cartLogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        CartTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "description", "price", "quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CartTable);

        deleteButton.setBackground(new java.awt.Color(153, 204, 255));
        deleteButton.setText("Delete");
        deleteButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteButtonMouseExited(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        DecreaseQuantityButton.setBackground(new java.awt.Color(153, 204, 255));
        DecreaseQuantityButton.setText("-");
        DecreaseQuantityButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        DecreaseQuantityButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DecreaseQuantityButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DecreaseQuantityButtonMouseExited(evt);
            }
        });
        DecreaseQuantityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecreaseQuantityButtonActionPerformed(evt);
            }
        });

        IncreaseQuantityButton.setBackground(new java.awt.Color(153, 204, 255));
        IncreaseQuantityButton.setText("+");
        IncreaseQuantityButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        IncreaseQuantityButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                IncreaseQuantityButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                IncreaseQuantityButtonMouseExited(evt);
            }
        });
        IncreaseQuantityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncreaseQuantityButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(IncreaseQuantityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addComponent(DecreaseQuantityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(425, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DecreaseQuantityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IncreaseQuantityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 80, Short.MAX_VALUE)))
        );

        cartcheckoutCalculate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 4, true));

        userLocationGet.setForeground(new java.awt.Color(153, 153, 153));
        userLocationGet.setText("City,Area,Building,Apt. no.");
        userLocationGet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userLocationGetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userLocationGetFocusLost(evt);
            }
        });
        userLocationGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userLocationGetActionPerformed(evt);
            }
        });

        paymentOptionDrop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Credit Card", "Wallet", "Esewa", "IME Bank", "Cash On Delivery" }));
        paymentOptionDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentOptionDropActionPerformed(evt);
            }
        });

        userLocationIndicator.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        userLocationIndicator.setText("Shipping Address");

        paymentIndicator.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        paymentIndicator.setText("Payment Method");

        moneyWalletIndicator.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        moneyWalletIndicator.setText("Wallet:");

        moneyYouHave.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        moneyYouHave.setForeground(new java.awt.Color(102, 102, 102));
        moneyYouHave.setText("Rs. 5000000.00");

        totalMoneyCart.setText("Total:");

        placeOrderButton.setBackground(new java.awt.Color(153, 204, 255));
        placeOrderButton.setText("Place Order");
        placeOrderButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        placeOrderButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                placeOrderButtonMouseExited(evt);
            }
        });
        placeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderButtonActionPerformed(evt);
            }
        });

        totalMoneyCount.setText("Rs. 2400.00");

        cartcheckoutSign.setFont(new java.awt.Font("Helvetica Neue", 0, 48)); // NOI18N
        cartcheckoutSign.setText("Checkout");

        javax.swing.GroupLayout cartcheckoutCalculateLayout = new javax.swing.GroupLayout(cartcheckoutCalculate);
        cartcheckoutCalculate.setLayout(cartcheckoutCalculateLayout);
        cartcheckoutCalculateLayout.setHorizontalGroup(
            cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                        .addGap(0, 52, Short.MAX_VALUE)
                        .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartcheckoutCalculateLayout.createSequentialGroup()
                                .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                                        .addComponent(moneyWalletIndicator)
                                        .addGap(41, 41, 41)
                                        .addComponent(moneyYouHave))
                                    .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(paymentOptionDrop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(userLocationGet, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE))
                                        .addComponent(userLocationIndicator)
                                        .addComponent(paymentIndicator)
                                        .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                                            .addComponent(totalMoneyCart)
                                            .addGap(32, 32, 32)
                                            .addComponent(totalMoneyCount))))
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartcheckoutCalculateLayout.createSequentialGroup()
                                .addComponent(placeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128))))
                    .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                        .addComponent(cartcheckoutSign, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        cartcheckoutCalculateLayout.setVerticalGroup(
            cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartcheckoutCalculateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cartcheckoutSign)
                .addGap(18, 18, 18)
                .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moneyWalletIndicator)
                    .addComponent(moneyYouHave))
                .addGap(49, 49, 49)
                .addComponent(userLocationIndicator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userLocationGet, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(paymentIndicator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentOptionDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(cartcheckoutCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalMoneyCart)
                    .addComponent(totalMoneyCount))
                .addGap(26, 26, 26)
                .addComponent(placeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cartcheckoutCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
            .addComponent(cartLogoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cartLogoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cartcheckoutCalculate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cartBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartBackButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartBackButtonActionPerformed

    private void cartLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartLogoutButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartLogoutButtonActionPerformed

    private void paymentOptionDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentOptionDropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentOptionDropActionPerformed

    private void userLocationGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userLocationGetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userLocationGetActionPerformed

    private void placeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placeOrderButtonActionPerformed

    private void userLocationGetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userLocationGetFocusGained
        if (userLocationGet.getText().equals("City,Area,Building,Apt. no.")) {
        userLocationGet.setText("");
        userLocationGet.setForeground(Color.BLACK);
      }
      // TODO add your handling code here:
    }//GEN-LAST:event_userLocationGetFocusGained

    private void userLocationGetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userLocationGetFocusLost
        if (userLocationGet.getText().trim().isEmpty()) {
        userLocationGet.setText("City,Area,Building,Apt. no.");
        userLocationGet.setForeground(Color.GRAY);
      }        // TODO add your handling code here:
    }//GEN-LAST:event_userLocationGetFocusLost

    private void placeOrderButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseEntered
        placeOrderButton.setBackground(new Color(255,204,153));        // TODO add your handling code here:
    }//GEN-LAST:event_placeOrderButtonMouseEntered

    private void placeOrderButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeOrderButtonMouseExited
        placeOrderButton.setBackground(new Color(153,204,255));// TODO add your handling code here:
    }//GEN-LAST:event_placeOrderButtonMouseExited

    private void cartLogoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartLogoutButtonMouseEntered
        cartLogoutButton.setBackground(new Color(255,204,153));        // TODO add your handling code here:
    }//GEN-LAST:event_cartLogoutButtonMouseEntered

    private void cartLogoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartLogoutButtonMouseExited
        cartLogoutButton.setBackground(new Color(153,204,255));// TODO add your handling code here:
    }//GEN-LAST:event_cartLogoutButtonMouseExited

    private void cartBackButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartBackButtonMouseEntered
        cartBackButton.setBackground(new Color(255,204,153));// TODO add your handling code here:
    }//GEN-LAST:event_cartBackButtonMouseEntered

    private void cartBackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartBackButtonMouseExited
        cartBackButton.setBackground(new Color(153,204,255));// TODO add your handling code here:
    }//GEN-LAST:event_cartBackButtonMouseExited

    private void deleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonMouseEntered

    private void deleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonMouseExited

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void DecreaseQuantityButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DecreaseQuantityButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_DecreaseQuantityButtonMouseEntered

    private void DecreaseQuantityButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DecreaseQuantityButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_DecreaseQuantityButtonMouseExited

    private void DecreaseQuantityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecreaseQuantityButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DecreaseQuantityButtonActionPerformed

    private void IncreaseQuantityButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IncreaseQuantityButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_IncreaseQuantityButtonMouseEntered

    private void IncreaseQuantityButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IncreaseQuantityButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_IncreaseQuantityButtonMouseExited

    private void IncreaseQuantityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncreaseQuantityButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IncreaseQuantityButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CartTable;
    private javax.swing.JButton DecreaseQuantityButton;
    private javax.swing.JButton IncreaseQuantityButton;
    private javax.swing.JButton cartBackButton;
    private javax.swing.JLabel cartLogo;
    private javax.swing.JButton cartLogoutButton;
    private javax.swing.JPanel cartLogoutPanel;
    private javax.swing.JPanel cartcheckoutCalculate;
    private javax.swing.JLabel cartcheckoutSign;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel moneyWalletIndicator;
    private javax.swing.JLabel moneyYouHave;
    private javax.swing.JLabel paymentIndicator;
    private javax.swing.JComboBox<String> paymentOptionDrop;
    private javax.swing.JButton placeOrderButton;
    private javax.swing.JLabel totalMoneyCart;
    private javax.swing.JLabel totalMoneyCount;
    private javax.swing.JTextField userLocationGet;
    private javax.swing.JLabel userLocationIndicator;
    // End of variables declaration//GEN-END:variables
public void loadCartData() {
        try {
            DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
            model.setRowCount(0); // Clear existing rows
            List<ProductModel> cartItems = ProductDAO.getCartItems();
            for (ProductModel item : cartItems) {
                JPanel buttonPanel = new JPanel();
                JButton increaseButton = new JButton("+");
                JButton decreaseButton = new JButton("-");
                increaseButton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        updateQuantity(item.getDescription(), item.getPrice(), item.getQuantity() + 1);
                    }
                });
                decreaseButton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (item.getQuantity() > 1) {
                            updateQuantity(item.getDescription(), item.getPrice(), item.getQuantity() - 1);
                        } else {
                            // Optionally delete item if quantity becomes 0
                            deleteCartItem(item.getDescription(), item.getPrice());
                        }
                    }
                });
                buttonPanel.add(increaseButton);
                buttonPanel.add(decreaseButton);
                model.addRow(new Object[]{item.getDescription(), item.getPrice(), item.getQuantity(), buttonPanel});
            }
           
            // Update total money count
            updateTotalPrice();
        } catch (SQLException e) {
            System.out.println("Error loading cart data: " + e.getMessage());
        }
    }
    public void customizeTableHeader() {
        CartTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
        String[] headers = new String[model.getColumnCount()];
        for (int i = 0; i < model.getColumnCount(); i++) {
            headers[i] = model.getColumnName(i).toUpperCase();
        }
        model.setColumnIdentifiers(headers);
    }

    private void updateQuantity(String description, double price, int newQuantity) {
        try {
            ProductDAO.updateCartItemQuantity(description, price, newQuantity);
            loadCartData(); // Refresh table
        } catch (SQLException e) {
            System.out.println("Error updating quantity: " + e.getMessage());
        }
    }

    private void deleteCartItem(String description, double price) {
        try {
            ProductDAO.deleteCartItem(description, price);
            loadCartData(); // Refresh table
        } catch (SQLException e) {
            System.out.println("Error deleting cart item: " + e.getMessage());
        }
    }

    // Calculate total price from CartTable
    public double calculateTotalPrice() {
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
        double total = 0.0;
        for (int i = 0; i < model.getRowCount(); i++) {
            Object priceObj = model.getValueAt(i, 1); // Price is in column 1
            Object quantityObj = model.getValueAt(i, 2); // Quantity is in column 2
            if (priceObj instanceof Double && quantityObj instanceof Integer) {
                total += (Double) priceObj * (Integer) quantityObj;
            }
        }
        return total;
    }
   
    // Update total price label
    public void updateTotalPrice() {
        double total = calculateTotalPrice();
        totalMoneyCount.setText("Rs. " + String.format("%.2f", total));
    }

    public void logout(ActionListener listener) {
        cartLogoutButton.addActionListener(listener);
    }

    public void back(ActionListener listener) {
        cartBackButton.addActionListener(listener);
    }

    // Getter methods for buttons
    public JButton getCartBackButton() {
        return cartBackButton;
    }

    public JButton getCartLogoutButton() {
        return cartLogoutButton;
    }

    public JButton getPlaceOrderButton() {
        return placeOrderButton;
    }

    public JButton getDeleteButton() {
        return deleteButton;
    }

    public JTable getCartTable() {
        return CartTable;
    }

    public JLabel getTotalMoneyCount() {
        return totalMoneyCount;
    }

    public JButton getIncreaseQuantityButton() {
        return IncreaseQuantityButton;
    }

    public JButton getDecreaseQuantityButton() {
        return DecreaseQuantityButton;
    }
}
